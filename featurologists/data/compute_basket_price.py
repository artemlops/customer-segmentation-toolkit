# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/03_data_compute_basket_price.ipynb (unless otherwise specified).

__all__ = ['compute_basket_price']

# Cell
import logging
import pandas as pd

# Cell

def compute_basket_price(df_cleaned: pd.DataFrame) -> pd.DataFrame:
    df_cleaned['TotalPrice'] = df_cleaned['UnitPrice'] * (df_cleaned['Quantity'] - df_cleaned['QuantityCanceled'])
    logging.info(str(df_cleaned.sort_values('CustomerID')[:5]))


#     #___________________________________________
#     # somme des achats / utilisateur & commande
#     temp = df_cleaned.groupby(by=['CustomerID', 'InvoiceNo'], as_index=False)['TotalPrice'].sum()
#     basket_price = temp.rename(columns = {'TotalPrice':'Basket Price'})
#     #_____________________
#     # date de la commande
#     df_cleaned['InvoiceDate_int'] = df_cleaned['InvoiceDate'].astype('int64')
#     temp = df_cleaned.groupby(by=['CustomerID', 'InvoiceNo'], as_index=False)['InvoiceDate_int'].mean()
#     df_cleaned.drop('InvoiceDate_int', axis = 1, inplace = True)
#     basket_price.loc[:, 'InvoiceDate'] = pd.to_datetime(temp['InvoiceDate_int'])
#     #______________________________________
#     # selection des entrÃ©es significatives:
#     basket_price = basket_price[basket_price['Basket Price'] > 0]
#     basket_price.sort_values('CustomerID')[:6]